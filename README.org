* Nix & Flakes - Reproducible machines

[[https://nixos.org][https://img.shields.io/badge/NixOS-grey.svg?style=flat-square&logo=NixOS&logoColor=white]]

These are my *NixOS* and *home-manager* configurations. They aim for maximum reproducibility through *Flakes*. This repo is composed by modules to provide plug&play configuration based on hosts and users.

I'm using the standalone approach for *home-manager*, but it shouldn't be difficult to integrate all this with the *NixOS module*.

#+BEGIN_QUOTE
Be careful if you want to use this "template", this is not a framework neither an easy-come-easy-go library. I'm a totally beginner.

[[./assets/patrick-meme.jpg]]
#+END_QUOTE

** Structure

Here the top-level structure of this repository.
I will put a tree like this in every *important* folder.

#+begin_src bash
  .
  ├── flake.nix
  ├── flake.lock                  
  ├── shell.nix                   # Needed dependencies 
  ├── wallpapers
  ├── home                        # Home-manager configuration 
  │   ├── configurations          # Configurations, home by home
  │   └── modules                 # Modules :: options to build a cute home
  ├── lib                         # Custom utility functions to reduce boilerplate code
  │   ├── default.nix             
  │   ├── home.nix                # Home configurations generator
  │   └── nixos.nix               # System configurations generator
  ├── outputs                     # Contains sets of possible configurations
  │   └── configs.nix             
  ├── overlays                    # Overlays folder
  ├── packages                    # Personal packages folder
  └── system                      # System configurations
      ├── configurations          # Configurations for every host
      └── modules                 # Modules :: options for system related stuff
#+end_src

** Instructions

*** First installation on new hardware

1. Boot into the NixOS installer;
2. Switch to root user;
3. Do your manual partitioning, and mount all (if you don't know how to do this step, go away);
4. Installation process:
   #+begin_src bash
     nix-shell -p git nixFlakes

     ### Thanks to hlissner for this trick ###
     # Set HOST for the hostname of the new system
     HOST=...
     # Set USER to your desired username
     USER=...

     git clone https://github.com/archer-65/nix-dotfiles /etc/dotfiles
     cd /etc/dotfiles

     # Create a new host folder
     mkdir -p system/configurations/$HOST

     # You have to create a new set in `outputs/configs.nix`
     # Follow the other sets structure.

     # This step generates your hardware-configuration and a basic configuration file
     nixos-generate-config --root /mnt --dir /etc/dotfiles/system/configurations/$HOST
     # You can remove the `configuration.nix` file, follow the other hosts structure to create your own configuration
     rm -f system/configurations/$HOST/configuration.nix
     # [OPTIONAL] You can copy the other files and modify what you want (be careful!), for instance:
     cp system/configurations/mate/{default.nix,options.nix} system/configurations/$HOST/

     git add -A

     # Install
     nixos-install --root /mnt --flake .#$HOST

     # Finally move your files where you want. Example:
     mv /etc/dotfiles /mnt/home/$USER/.dotfiles
   #+end_src
5. Reboot;
6. Change your password;
7. Enjoy;
   
*** Once installed

#+BEGIN_QUOTE
I'm assuming you're referring to flake configurations in your working directory...but it doesn't matter, you can build from github, from other folders or from another planet :).
#+END_QUOTE

If you want to build your home-manager configuration:
   #+begin_src bash
     # Create your own folder with `default.nix` under `/home/configurations`
     cp -R /home/configurations/mario@mate /home/configurations/"${USER}"@"${HOSTNAME}"

     # Modify what you want, then create your set under `/outputs/configs.nix`
     # Build and activate!
     nix build .#homeConfigurations."${USER}@${HOSTNAME}".activationPackage
     ./result/activate
   #+end_src

*** Once in a while

Update your lock file!
#+begin_src bash
  nix flake update
#+end_src

To rebuild system/home:
#+begin_src bash
  nixos-rebuild switch --flake .#$HOSTNAME
  home-manager switch --flake .#"${USER}@${HOSTNAME}"
#+end_src

** How did I accomplish this?

Well, I "borrowed" many ideas and functions from other repos...learning nix is *really hard*, with a steep learning curve.

Thanks to:
- [[https://github.com/Misterio77/nix-config][Misterio77]]
- [[https://github.com/fufexan/dotfiles][Fufexan]]
- [[https://github.com/pinpox/nixos][Pinpox]]
- [[https://github.com/hlissner/dotfiles/tree/dfa908e06853908e7ca7b3d0318df618b79ca322][hlissner]]
- [[https://github.com/NobbZ/nixos-config][nobbz]] 
- [[https://github.com/bbigras/nix-config][bbigras]] 
- [[https://github.com/gvolpe/nix-config][gvolpe]] 
